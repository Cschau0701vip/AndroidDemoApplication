name: Android Build and Deployment Pipeline

on:
#  push:
#    branches:
#      - "master"

  workflow_dispatch:
    inputs:
      app_id:
        description: 'The application Id of the current build'
        required: true
      branch:
        description: 'The branch from which we have to build'
        required: true
        default: 'master'

jobs:
#   STEP 1 : Setup and Build the Project
  build:
    name: Setup Environment and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code to specific branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
            
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
                
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
              
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Generate app bundle
        run: ./gradlew app:bundleRelease --stacktrace
        
      - name: listing
        run: ls
        
      - name: Sign app bundle
        run: |
          jarsigner -keystore app/*.jks \
          -storepass ${{ secrets.KEY_STORE_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} \
          app/build/outputs/bundle/release/app-release.aab ${{ secrets.ALIAS }}
          
#      - name: Sign Android release
#        uses: r0adkll/sign-android-release@v1
#        with:
#          # The directory to find your release to sign
#          releaseDirectory: app/build/outputs/bundle/release
#          # The key used to sign your release in base64 encoded format
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          # The key alias
#          alias: ${{ secrets.ALIAS }}
#          # The password to the keystore
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          # The password for the key
#          keyPassword: ${{ secrets.KEY_PASSWORD }} # optional
#        env:
#          # override default build-tools version (29.0.3) -- optional
#          BUILD_TOOLS_VERSION: "30.0.2"
          
#   STEP 2 : Upload the Artifact
  upload:
    needs: [ build ]
    name: Upload the signed artifact
    runs-on: ubuntu-latest
    steps:
      - name: Upload Bundle
        uses: actions/upload-artifact@v2
        with:
          name: signed_app_bundle
          path: app/build/outputs/bundle/release/app-release.aab
          
  
  # Step 3 : Release to playstore
  deploy:
    needs: [ build ]
    name: Create release on Playstore
    runs-on: ubuntu-latest
    steps:
      - name: Create service_account.json
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJson: service_account.json
          packageName: demo_app71
          #${{ github.event.inputs.app_id }}
          releaseFiles: app/release/*.aab
          track: internal
          whatsNewDirectory: whatsnew/
          #mappingFile: app/build/outputs/mapping/release/mapping.txt
          inAppUpdatePriority: 5
