name: Android Build and Deployment Pipeline

on:
  push:
   branches:
      - "master"

#  workflow_dispatch:
#    inputs:
#      app_id:
#        description: 'The application Id of the current build'
#        required: true
#     branch:
#        description: 'The branch from which we have to build'
#        required: true
#        default: 'master'

jobs:
#   STEP 1 : Setup and Build the Project
  build:
    name: Setup Environment and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code to specific branch
        uses: actions/checkout@v2
#        with:
#          ref: ${{ github.event.inputs.branch }}
            
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
                
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        
      - name: Use Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Generate App bundle (.aab)
        run: ./gradlew app:bundleRelease --stacktrace
        
      - name: Check Current Path
        shell: bash
        run: | 
          #ls -R ./ 
          find . -type f -name "*.aab"
          pwd
          
      - name: Generate Test bundle (.apk)
        run: ./gradlew app:assembleAndroidTest --stacktrace
        
      - name: Check Current Path
        shell: bash
        run: | 
          #ls -R ./ 
          find . -type f -name "*.apk"
          pwd
          
      - name: Run Gradle Linters
        run: ./gradlew check
        
      - name: Test App bundle
        run:  ./gradlew test
        
      - name: Signing App Bundle
        id: sign_app
        run: |
          jarsigner -keystore app/*.jks \
          -storepass ${{ secrets.KEY_STORE_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} \
          app/build/outputs/bundle/release/app-release.aab ${{ secrets.ALIAS }}
          
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}
          name: android_artifact
          
#      - name: Sign Android release
#        uses: r0adkll/sign-android-release@v1
#        with:
#          # The directory to find your release to sign
#          releaseDirectory: app/build/outputs/bundle/release
#          # The key used to sign your release in base64 encoded format
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          # The key alias
#          alias: ${{ secrets.ALIAS }}
#          # The password to the keystore
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          # The password for the key
#          keyPassword: ${{ secrets.KEY_PASSWORD }} # optional
#        env:
#          # override default build-tools version (29.0.3) -- optional
#          BUILD_TOOLS_VERSION: "30.0.2"
          
      - name: Check Path
        shell: bash
        run: | 
          find . -type f -name "*.a*"
          pwd
          
# Step 2 : Release to app center
  deploy:
    needs: [ build ]
    name: Create release on app center
    runs-on: ubuntu-latest
    steps:
      - name: App Center Distribute
        # You may pin to the exact commit or the version.
        # uses: devussy/AppCenter-Distribute-Github-Action@15b2bfc756f26bc5125e761b229bdb8005926760
        uses: devussy/AppCenter-Distribute-Github-Action@v1.0.2
        with:
          # App name followed by username e.g. devussy/Sample-App
          app: 'chetan.chaudhari/Android-Demo-App'
          # Upload token - you can get one from appcenter.ms/settings
          token: ad7c1190b680df01a8cadfdde0b64a6ef37be32b
          # Distribution group
          group: Chetan
          # Artifact to upload (.apk or .ipa)
          file: app/build/outputs/release/*.aab
          # Release notes visible on release page
          #releaseNotes: # optional
          # Flag to determine whether notify testers of this release or not (true/false)
          #silent: # optional, default is true
    
#      - name: Create service_account.json
#        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

 #     - name: Deploy to Play Store
 #       uses: r0adkll/upload-google-play@v1.0.15
 #       with:
 #         serviceAccountJson: service_account.json
 #         packageName: ${{ github.event.inputs.app_id }}
 #        releaseFiles: app/build/outputs/release/*.aab
 #         track: internal
 #        whatsNewDirectory: whatsnew/
 #         #mappingFile: app/build/outputs/mapping/release/mapping.txt
 #         inAppUpdatePriority: 5
